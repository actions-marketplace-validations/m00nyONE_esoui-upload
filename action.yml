name: 'ESOUI Addon upload'
description: 'Uploads an addon to ESOUI ( PC Addons only )'
author: 'm00nyONE'
branding:
  icon: 'upload-cloud'
  color: 'blue'

inputs:
  api_key:
    description: 'ESOUI API Key'
    required: true
  addon_id:
    description: 'Addon ID'
    required: true
  version:
    description: 'Addon version'
    required: true
  zip_file:
    description: 'Path to Addon zip file'
    required: true
  changelog_file:
    description: 'Path to changelog file'
    required: false
    default: CHANGELOG.md
  description_file:
    description: 'Path to description file'
    required: false
    default: description.txt
  compatibility:
    description: 'Compatibile game version'
    required: false
  test:
    description: 'Whether to use the test API endpoint'
    required: false
    default: false
    type: boolean
runs:
  using: "composite"
  steps:
    - name: Mask API Key
      shell: bash
      run: echo "::add-mask::${{ inputs.api_key }}"

    - name: verify inputs
      shell: bash
      run: |
        # Check if api_key is not empty
        if [ -z "${{ inputs.api_key }}" ]; then
          echo "::error:: ‚ùå api_key is empty"
          exit 1
        fi
        # Check if addon_id is a number
        re='^[0-9]+$'
        if ! [[ ${{ inputs.addon_id }} =~ $re ]]; then
          echo "::error:: ‚ùå addon_id is not a number"
          exit 1
        fi
        # Check if changelog file exists (only if provided)
        if [ -n "${{ inputs.changelog_file }}" ]; then
          if [ ! -f "${{ inputs.changelog_file }}" ]; then
            echo "::error:: ‚ùå Changelog file not found: ${{ inputs.changelog_file }}"
            exit 1
          fi
        fi
        # Check if description file exists (only if provided)
        if [ -n "${{ inputs.description_file }}" ]; then
          if [ ! -f "${{ inputs.description_file }}" ]; then
            echo "::error:: ‚ùå Description file not found: ${{ inputs.description_file }}"
            exit 1
          fi
        fi
        # Check if zip file exists
        if [ ! -f "${{ inputs.zip_file }}" ]; then
          echo "::error:: ‚ùå Zip file not found: ${{ inputs.zip_file }}"
          exit 1
        fi
        # Check compatibility format (only if provided)
        if [ -n "${{ inputs.compatibility }}" ]; then
          reCompat='^[0-9]+\.[0-9]+\.[0-9]+$'
          if ! [[ ${{ inputs.compatibility }} =~ $reCompat ]]; then
            echo "::error:: ‚ùå Incorrect compatibility format"
            exit 1
          fi
        fi

    - name: Upload Addon to ESOUI
      shell: bash
      run: |
        set +x
        if ${{ inputs.test }}; then
          API_URL="https://api.esoui.com/addons/updatetest"
          echo "::notice:: üß™ Test deployment!"
        else
          API_URL="https://api.esoui.com/addons/update"
        fi
        
        CURL_CMD="curl --silent --fail -X POST \
          -H \"x-api-token: ${{ inputs.api_key }}\" \
          -F \"id=${{ inputs.addon_id }}\" \
          -F \"version=${{ inputs.version }}\" \
          -F \"updatefile=@${{ inputs.zip_file }}\""
        
        if [ -n "${{ inputs.changelog_file }}" ]; then
          CURL_CMD="$CURL_CMD -F \"changelog=<${{ inputs.changelog_file }}\""
        fi
        
        if [ -n "${{ inputs.description_file }}" ]; then
          CURL_CMD="$CURL_CMD -F \"description=<${{ inputs.description_file }}\""
        fi
        
        if [ -n "${{ inputs.compatibility }}" ]; then
          CURL_CMD="$CURL_CMD -F \"compatibility=${{ inputs.compatibility }}\""
        fi
        
        CURL_CMD="$CURL_CMD \"$API_URL\""
        eval $CURL_CMD
